class DSU{
    public:
    vector<int> parent;
    vector<int> size;

    DSU(int n){
        parent = vector<int>(n+1);
        size = vector<int>(n+1);

        for(int i=0;i<=n;i++){
            parent[i] = i;
            size[i] = 1;
        }
    }

    int findParent(int node){
        if(parent[node] == node){
            return node;
        }

        return parent[node] = findParent(parent[node]);
    }

    void set_union(int u,int v){
        int pu = findParent(u);
        int pv = findParent(v);

        if(pu == pv){
            return ;
        }
        else if(size[pu] >= size[pv]){
            parent[pv] = pu;
            size[pu]+=size[pv];
        }
        else{
            parent[pu] = pv;
            size[pv]+=size[pu];
        }
    }
};
